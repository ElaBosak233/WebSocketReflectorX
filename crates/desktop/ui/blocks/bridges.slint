
export global WindowControlBridge {
    pure callback start_drag;
    pure callback close;
    pure callback minimize;
    pure callback maximize;
}

export global SystemInfoBridge {
    in-out property <string> version;
    in-out property <bool> has-updates;
    in-out property <string> os;
    in-out property <[string]> interfaces;
    in-out property <string> info;
    callback refresh-interfaces;
    callback open-link(url: string);
}

export struct Instance {
    label: string,
    remote: string,
    local: string,
    latency: string,
    scope_host: string,
}

export struct Scope {
    host: string,
    name: string,
    state: string,
    features: string,
}

export global InstanceBridge {
    // manual-add only available to "default" scope
    callback add(remote: string, local: string);
    callback del(remote: string);
    callback scope(host: string);
    in-out property <[Instance]> instances;
    in-out property <[Instance]> scoped-instances;
}

export global ScopeBridge {
    callback del(host: string);
    callback allow(host: string);
    in-out property <[Scope]> scopes;
}

export global SettingsBridge {
    in-out property <string> theme;
    in-out property <string> language;
    in-out property <int> api-port: 0;
    in-out property <bool> online: false;
}
